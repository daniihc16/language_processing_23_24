/* Generated By:JavaCC: Do not edit this line. alikeConstants.java */
package traductor;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface alikeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int tCOMMENT = 2;
  /** RegularExpression Id. */
  int LETTER = 7;
  /** RegularExpression Id. */
  int DIGIT = 8;
  /** RegularExpression Id. */
  int tBEGIN = 9;
  /** RegularExpression Id. */
  int tEND = 10;
  /** RegularExpression Id. */
  int tASIGN = 11;
  /** RegularExpression Id. */
  int tREF = 12;
  /** RegularExpression Id. */
  int tIS = 13;
  /** RegularExpression Id. */
  int tOF = 14;
  /** RegularExpression Id. */
  int tPROC = 15;
  /** RegularExpression Id. */
  int tNULL = 16;
  /** RegularExpression Id. */
  int tRETURN = 17;
  /** RegularExpression Id. */
  int tCHAR = 18;
  /** RegularExpression Id. */
  int tBOOL = 19;
  /** RegularExpression Id. */
  int tINT = 20;
  /** RegularExpression Id. */
  int tCHARCONST = 21;
  /** RegularExpression Id. */
  int tINTCONST = 22;
  /** RegularExpression Id. */
  int tBOOLCONST = 23;
  /** RegularExpression Id. */
  int tSTRING = 24;
  /** RegularExpression Id. */
  int tPLUS = 25;
  /** RegularExpression Id. */
  int tMINUS = 26;
  /** RegularExpression Id. */
  int tTIMES = 27;
  /** RegularExpression Id. */
  int tDIV = 28;
  /** RegularExpression Id. */
  int tLT = 29;
  /** RegularExpression Id. */
  int tGT = 30;
  /** RegularExpression Id. */
  int tEQ = 31;
  /** RegularExpression Id. */
  int tNE = 32;
  /** RegularExpression Id. */
  int tLE = 33;
  /** RegularExpression Id. */
  int tGE = 34;
  /** RegularExpression Id. */
  int tMOD = 35;
  /** RegularExpression Id. */
  int tAPAR = 36;
  /** RegularExpression Id. */
  int tCPAR = 37;
  /** RegularExpression Id. */
  int tSCOL = 38;
  /** RegularExpression Id. */
  int tCOL = 39;
  /** RegularExpression Id. */
  int tCOMA = 40;
  /** RegularExpression Id. */
  int tRANGE = 41;
  /** RegularExpression Id. */
  int tSKIPLINE = 42;
  /** RegularExpression Id. */
  int tGET = 43;
  /** RegularExpression Id. */
  int tPUTLINE = 44;
  /** RegularExpression Id. */
  int tPUT = 45;
  /** RegularExpression Id. */
  int tINT2CHAR = 46;
  /** RegularExpression Id. */
  int tCHAR2INT = 47;
  /** RegularExpression Id. */
  int tIF = 48;
  /** RegularExpression Id. */
  int tELSE = 49;
  /** RegularExpression Id. */
  int tELSIF = 50;
  /** RegularExpression Id. */
  int tTHEN = 51;
  /** RegularExpression Id. */
  int tWHILE = 52;
  /** RegularExpression Id. */
  int tLOOP = 53;
  /** RegularExpression Id. */
  int tIDENTIFIER = 54;
  /** RegularExpression Id. */
  int tRESTO = 55;

  /** Lexical state. */
  int COMILLAS = 0;
  /** Lexical state. */
  int DEFAULT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\\"\"",
    "<tCOMMENT>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "<LETTER>",
    "<DIGIT>",
    "\"begin\"",
    "\"end\"",
    "\":=\"",
    "\"ref\"",
    "\"is\"",
    "\"of\"",
    "\"procedure\"",
    "\"null\"",
    "\"return\"",
    "\"character\"",
    "\"boolean\"",
    "\"integer\"",
    "<tCHARCONST>",
    "<tINTCONST>",
    "<tBOOLCONST>",
    "<tSTRING>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"/=\"",
    "\"<=\"",
    "\">=\"",
    "\"mod\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"..\"",
    "\"skip_line\"",
    "\"get\"",
    "\"put_line\"",
    "\"put\"",
    "\"int2char\"",
    "\"char2int\"",
    "\"if\"",
    "\"else\"",
    "\"elsif\"",
    "\"then\"",
    "\"while\"",
    "\"loop\"",
    "<tIDENTIFIER>",
    "<tRESTO>",
  };

}

fallos_expresiones: 	if true or false and true then
Resultado del compilador: 
    Syntax error (30,22): Current symbol: 'and'
    Expected tokens: "+" "-" "*" "/" "mod" "and" "=" ">" "<" ">=" "<=" "/=" ")"
Resultado esperado: -- No hay error --
Causa: El compilador original no permite expresión de más de 2 relaciones. 
El compilador, en caso de dar error, podría ser semántico pero el lenguaje alike permite las listas de dos o más relaciones. No es error sintáctico

En la gramática básica aportada ->
expresion:
relacion ( ((<tAND> | <tOR>) relacion)+ )?


fallos expresiones: elsif (var_bool_array) then
Contexto: var_bool_array es una variable de tipo ARRAY de BOOLEAN
Resultado del compilador: -- No hay error semántico --
Resultado esperado: Error semántico
Causa: Al parecer se está comprobando el tipo base del array, y lo está dando por válido cuando en  realidad se está pasando un array.
Para arrays de tipos de dato base distintos a BOOLEAN, el compilador se comporta correctamente.

fallos expresiones: fallos_expresiones;
Contexto: Invocación al procedimiento principal
Resultado del compilador: -- No hay error --
Resultado esperado: Error Semántico, el procedimiento principal no puede ser invocado
Causa: El procedimiento principal no es invocable (del enunciado de la práctica 3)

fallos expresiones: var_integer := -var_array;
Contexto: var_integer y var_array son variables de tipo INTEGER y ARRAY[INTEGER]
Resultado del compilador: -- No hay error semántico --
Resultado esperado: Error semántico
Causa: No se puede aplicar el operador unario '-' a un ARRAY[INTEGER]


fallos expresiones: var_array > var_array; "hello" > "world";
Resultado del compilador: -- No hay error semántico --
Resultado esperado: Error semántico
Causa: ARRAY y STRING no se pueden comparar con nada

--------------------------------------------------------------------------------------------------------
 42 put_line("yes", 'c', 1, true); -- ok
 43	
 44	-- inst_invocacion_o_asignacion
 45    -- asignar un valor a un literal
 46    1 := 1;

Syntax error (42,34): Current symbol: '1'
Expected tokens: "end" "if" "while" "get" "skip_line" "put" "put_line" "return" "exit" "null" <tID>
Resultado esperado: El error se da en la línea 42 cuando realmente está en la línea 46


Código que causa el error: funcion(1) := 4;
Resultado del compilador: 
    Error semántico (21,5): Símbolo: 'funcion'. No es un vector, pero se usa como tal
    Error no controlado. No debería haber llegado aquí:
    (21,19): Símbolo: '4
    java.lang.ClassCastException: class a.c.e cannot be cast to class a.c.d (a.c.e and a.c.d are in unnamed module of loader 'app')   
Resultado esperado: Error semántico, función no es un vector o una variable asignable



Código que causa el error:
    -- función y procedimiento con un número incorrecto de parámetros (probar más y menos)
    var_integer := func_con_params(true, -1, int2char(4), var_array, var_boolean, var_integer, var_char); -- 1 menos

Contexto:
    function func_con_params(bool_param: boolean; integer_param: integer; char_param: character; array_param: array(1..5) of integer; 
                            ref_bool_param: ref  boolean; ref_integer_param: ref integer; ref_char_param: ref character; 
                            ref_array_param: ref array(1..5) of integer) 
    return integer is
    begin
        return 1;
    end;

Resultado del compilador:
    Error semántico (49,20): Símbolo: 'func_con_params'. Diferente número de parámetros reales y formales
    Error no controlado. No debería haber llegado aquí:
    (49,104): Símbolo: ')
    java.lang.IndexOutOfBoundsException: Index 7 out of bounds for length 7
Resultado esperado: Error semántico, número incorrecto de parámetros